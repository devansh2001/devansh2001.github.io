{"ast":null,"code":"var _jsxFileName = \"/Users/devanshjatinponda/personal-projects/devansh2001.github.io/src/components/projects/Projects.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nclass Projects extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"https://www.teamdesk.net/blog/wp-content/uploads/2017/11/Inventory-Management-Online-Database-750x410.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Inventory Management System\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"This is a JavaFX-based Inventory Management System. Users can add, delete, and modify data. Searching and sorting on different parameters is also possible. Java is used for the operations and GUI, while mySQL used for the backend.\"), React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Access Project\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"https://cdn.lynda.com/course/697705/697705-636924138322611315-16x9.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"BitPrice\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"BitPrice is a web application that allows its users to track the price of Bitcoin in over 160 global currencies. Results update automatically every minute, but users can manually update it if they wish too. They can also see real-time percentage change in cost for all currencies.\"), React.createElement(Button, {\n      variant: \"primary\",\n      className: 'project-button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Access Live App\"), React.createElement(Button, {\n      variant: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Access Project\"))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"holder.js/100px160\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Unit Converter App\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"This is an Android Application that can be used to interconvert values from one unit to another for several physical quantities. It is my first application in Android Studio, but because of my past experiences in Java, I have used OOP practices like Liskov-Substitution Principle and Open-Closed Principle.\")), React.createElement(Card.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Last updated 3 mins ago\")))));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/devanshjatinponda/personal-projects/devansh2001.github.io/src/components/projects/Projects.js"],"names":["React","Component","Card","Button","CardDeck","Projects","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAC,2GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gPAFJ,EAOI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CAFJ,CADJ,EAcI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAC,wEAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kSAFJ,EAQI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,SAAS,EAAE,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARJ,EASI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ,CAFJ,CAdJ,EA6BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAC,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4TAFJ,CAFJ,EAWI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CAXJ,CA7BJ,CADJ,CADJ;AAiDH;;AAnD4B;;AAsDjC,eAAeD,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck'\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div>\n                <CardDeck>\n                    <Card>\n                        <Card.Img variant=\"top\" src=\"https://www.teamdesk.net/blog/wp-content/uploads/2017/11/Inventory-Management-Online-Database-750x410.jpg\" />\n                        <Card.Body>\n                            <Card.Title>Inventory Management System</Card.Title>\n                            <Card.Text>\n                                This is a JavaFX-based Inventory Management System. Users can add, delete, and modify data.\n                                Searching and sorting on different parameters is also possible. Java is used for the\n                                operations and GUI, while mySQL used for the backend.\n                            </Card.Text>\n                            <Button variant=\"primary\">Access Project</Button>\n                        </Card.Body>\n\n                    </Card>\n                    <Card>\n                        <Card.Img variant=\"top\" src=\"https://cdn.lynda.com/course/697705/697705-636924138322611315-16x9.jpg\" />\n                        <Card.Body>\n                            <Card.Title>BitPrice</Card.Title>\n                            <Card.Text>\n                                BitPrice is a web application that allows its users to track the price of Bitcoin in over\n                                160 global currencies. Results update automatically every minute, but users can manually\n                                update it if they wish too. They can also see real-time percentage change in cost for all\n                                currencies.\n                            </Card.Text>\n                            <Button variant=\"primary\" className={'project-button'}>Access Live App</Button>\n                            <Button variant=\"secondary\">Access Project</Button>\n                        </Card.Body>\n\n                    </Card>\n                    <Card>\n                        <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n                        <Card.Body>\n                            <Card.Title>Unit Converter App</Card.Title>\n                            <Card.Text>\n                                This is an Android Application that can be used to interconvert values from one unit to\n                                another for several physical quantities. It is my first application in Android Studio,\n                                but because of my past experiences in Java, I have used OOP practices like Liskov-Substitution\n                                Principle and Open-Closed Principle.\n                            </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\n                        </Card.Footer>\n                    </Card>\n                </CardDeck>\n            </div>\n        );\n    }\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}